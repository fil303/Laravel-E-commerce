/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!**************************************************!*\
  !*** ./public/assets/js/bootstrap-slider.min.js ***!
  \**************************************************/
eval("/*! =======================================================\n                      VERSION  4.0.5              \n========================================================= */\n\n/*! =========================================================\n * bootstrap-slider.js\n *\n * Maintainers: \n *\t\tKyle Kemp \n *\t\t\t- Twitter: @seiyria\n *\t\t\t- Github:  seiyria\n *\t\tRohit Kalkur\n *\t\t\t- Twitter: @Rovolutionary\n *\t\t\t- Github:  rovolution\n *\n * =========================================================\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ========================================================= */\n!function (a) {\n  !function (a) {\n    \"use strict\";\n\n    function b() {}\n\n    function c(a) {\n      function c(b) {\n        b.prototype.option || (b.prototype.option = function (b) {\n          a.isPlainObject(b) && (this.options = a.extend(!0, this.options, b));\n        });\n      }\n\n      function e(b, c) {\n        a.fn[b] = function (e) {\n          if (\"string\" == typeof e) {\n            for (var g = d.call(arguments, 1), h = 0, i = this.length; i > h; h++) {\n              var j = this[h],\n                  k = a.data(j, b);\n              if (k) {\n                if (a.isFunction(k[e]) && \"_\" !== e.charAt(0)) {\n                  var l = k[e].apply(k, g);\n                  if (void 0 !== l && l !== k) return l;\n                } else f(\"no such method '\" + e + \"' for \" + b + \" instance\");\n              } else f(\"cannot call methods on \" + b + \" prior to initialization; attempted to call '\" + e + \"'\");\n            }\n\n            return this;\n          }\n\n          var m = this.map(function () {\n            var d = a.data(this, b);\n            return d ? (d.option(e), d._init()) : (d = new c(this, e), a.data(this, b, d)), a(this);\n          });\n          return !m || m.length > 1 ? m : m[0];\n        };\n      }\n\n      if (a) {\n        var f = \"undefined\" == typeof console ? b : function (a) {\n          console.error(a);\n        };\n        return a.bridget = function (a, b) {\n          c(b), e(a, b);\n        }, a.bridget;\n      }\n    }\n\n    var d = Array.prototype.slice;\n    c(a);\n  }(a), function (a) {\n    function b(b, c) {\n      function d(a, b) {\n        var c = \"data-slider-\" + b,\n            d = a.getAttribute(c);\n\n        try {\n          return JSON.parse(d);\n        } catch (e) {\n          return d;\n        }\n      }\n\n      \"string\" == typeof b ? this.element = document.querySelector(b) : b instanceof HTMLElement && (this.element = b);\n      var e,\n          f,\n          g,\n          h = this.element.style.width,\n          i = !1,\n          j = this.element.parentNode;\n      if (this.sliderElem) i = !0;else {\n        this.sliderElem = document.createElement(\"div\"), this.sliderElem.className = \"slider\";\n        var k = document.createElement(\"div\");\n        k.className = \"slider-track\", e = document.createElement(\"div\"), e.className = \"slider-selection\", f = document.createElement(\"div\"), f.className = \"slider-handle min-slider-handle\", g = document.createElement(\"div\"), g.className = \"slider-handle max-slider-handle\", k.appendChild(e), k.appendChild(f), k.appendChild(g);\n\n        var l = function l(a) {\n          var b = document.createElement(\"div\");\n          b.className = \"tooltip-arrow\";\n          var c = document.createElement(\"div\");\n          c.className = \"tooltip-inner\", a.appendChild(b), a.appendChild(c);\n        },\n            m = document.createElement(\"div\");\n\n        m.className = \"tooltip tooltip-main\", l(m);\n        var n = document.createElement(\"div\");\n        n.className = \"tooltip tooltip-min\", l(n);\n        var o = document.createElement(\"div\");\n        o.className = \"tooltip tooltip-max\", l(o), this.sliderElem.appendChild(k), this.sliderElem.appendChild(m), this.sliderElem.appendChild(n), this.sliderElem.appendChild(o), j.insertBefore(this.sliderElem, this.element), this.element.style.display = \"none\";\n      }\n      a && (this.$element = a(this.element), this.$sliderElem = a(this.sliderElem)), c = c ? c : {};\n\n      for (var p = Object.keys(this.defaultOptions), q = 0; q < p.length; q++) {\n        var r = p[q],\n            s = c[r];\n        s = \"undefined\" != typeof s ? s : d(this.element, r), s = null !== s ? s : this.defaultOptions[r], this.options || (this.options = {}), this.options[r] = s;\n      }\n\n      this.eventToCallbackMap = {}, this.sliderElem.id = this.options.id, this.touchCapable = \"ontouchstart\" in window || window.DocumentTouch && document instanceof window.DocumentTouch, this.tooltip = this.sliderElem.querySelector(\".tooltip-main\"), this.tooltipInner = this.tooltip.querySelector(\".tooltip-inner\"), this.tooltip_min = this.sliderElem.querySelector(\".tooltip-min\"), this.tooltipInner_min = this.tooltip_min.querySelector(\".tooltip-inner\"), this.tooltip_max = this.sliderElem.querySelector(\".tooltip-max\"), this.tooltipInner_max = this.tooltip_max.querySelector(\".tooltip-inner\"), i === !0 && (this._removeClass(this.sliderElem, \"slider-horizontal\"), this._removeClass(this.sliderElem, \"slider-vertical\"), this._removeClass(this.tooltip, \"hide\"), this._removeClass(this.tooltip_min, \"hide\"), this._removeClass(this.tooltip_max, \"hide\"), [\"left\", \"top\", \"width\", \"height\"].forEach(function (a) {\n        this._removeProperty(this.trackSelection, a);\n      }, this), [this.handle1, this.handle2].forEach(function (a) {\n        this._removeProperty(a, \"left\"), this._removeProperty(a, \"top\");\n      }, this), [this.tooltip, this.tooltip_min, this.tooltip_max].forEach(function (a) {\n        this._removeProperty(a, \"left\"), this._removeProperty(a, \"top\"), this._removeProperty(a, \"margin-left\"), this._removeProperty(a, \"margin-top\"), this._removeClass(a, \"right\"), this._removeClass(a, \"top\");\n      }, this)), \"vertical\" === this.options.orientation ? (this._addClass(this.sliderElem, \"slider-vertical\"), this.stylePos = \"top\", this.mousePos = \"pageY\", this.sizePos = \"offsetHeight\", this._addClass(this.tooltip, \"right\"), this.tooltip.style.left = \"100%\", this._addClass(this.tooltip_min, \"right\"), this.tooltip_min.style.left = \"100%\", this._addClass(this.tooltip_max, \"right\"), this.tooltip_max.style.left = \"100%\") : (this._addClass(this.sliderElem, \"slider-horizontal\"), this.sliderElem.style.width = h, this.options.orientation = \"horizontal\", this.stylePos = \"left\", this.mousePos = \"pageX\", this.sizePos = \"offsetWidth\", this._addClass(this.tooltip, \"top\"), this.tooltip.style.top = -this.tooltip.outerHeight - 14 + \"px\", this._addClass(this.tooltip_min, \"top\"), this.tooltip_min.style.top = -this.tooltip_min.outerHeight - 14 + \"px\", this._addClass(this.tooltip_max, \"top\"), this.tooltip_max.style.top = -this.tooltip_max.outerHeight - 14 + \"px\"), this.options.value instanceof Array ? this.options.range = !0 : this.options.range && (this.options.value = [this.options.value, this.options.max]), this.trackSelection = e || this.trackSelection, \"none\" === this.options.selection && this._addClass(this.trackSelection, \"hide\"), this.handle1 = f || this.handle1, this.handle2 = g || this.handle2, i === !0 && (this._removeClass(this.handle1, \"round triangle\"), this._removeClass(this.handle2, \"round triangle hide\"));\n      var t = [\"round\", \"triangle\", \"custom\"],\n          u = -1 !== t.indexOf(this.options.handle);\n      u && (this._addClass(this.handle1, this.options.handle), this._addClass(this.handle2, this.options.handle)), this.offset = this._offset(this.sliderElem), this.size = this.sliderElem[this.sizePos], this.setValue(this.options.value), this.handle1Keydown = this._keydown.bind(this, 0), this.handle1.addEventListener(\"keydown\", this.handle1Keydown, !1), this.handle2Keydown = this._keydown.bind(this, 0), this.handle2.addEventListener(\"keydown\", this.handle2Keydown, !1), this.touchCapable ? (this.mousedown = this._mousedown.bind(this), this.sliderElem.addEventListener(\"touchstart\", this.mousedown, !1)) : (this.mousedown = this._mousedown.bind(this), this.sliderElem.addEventListener(\"mousedown\", this.mousedown, !1)), \"hide\" === this.options.tooltip ? (this._addClass(this.tooltip, \"hide\"), this._addClass(this.tooltip_min, \"hide\"), this._addClass(this.tooltip_max, \"hide\")) : \"always\" === this.options.tooltip ? (this._showTooltip(), this._alwaysShowTooltip = !0) : (this.showTooltip = this._showTooltip.bind(this), this.hideTooltip = this._hideTooltip.bind(this), this.sliderElem.addEventListener(\"mouseenter\", this.showTooltip, !1), this.sliderElem.addEventListener(\"mouseleave\", this.hideTooltip, !1), this.handle1.addEventListener(\"focus\", this.showTooltip, !1), this.handle1.addEventListener(\"blur\", this.hideTooltip, !1), this.handle2.addEventListener(\"focus\", this.showTooltip, !1), this.handle2.addEventListener(\"blur\", this.hideTooltip, !1)), this.options.enabled ? this.enable() : this.disable();\n    }\n\n    var c = {\n      formatInvalidInputErrorMsg: function formatInvalidInputErrorMsg(a) {\n        return \"Invalid input value '\" + a + \"' passed in\";\n      },\n      callingContextNotSliderInstance: \"Calling context element does not have instance of Slider bound to it. Check your code to make sure the JQuery object returned from the call to the slider() initializer is calling the method\"\n    },\n        d = function d(a, c) {\n      return b.call(this, a, c), this;\n    };\n\n    if (d.prototype = {\n      _init: function _init() {},\n      constructor: d,\n      defaultOptions: {\n        id: \"\",\n        min: 0,\n        max: 10,\n        step: 1,\n        precision: 0,\n        orientation: \"horizontal\",\n        value: 5,\n        range: !1,\n        selection: \"before\",\n        tooltip: \"show\",\n        tooltip_split: !1,\n        handle: \"round\",\n        reversed: !1,\n        enabled: !0,\n        formatter: function formatter(a) {\n          return a instanceof Array ? a[0] + \" : \" + a[1] : a;\n        },\n        natural_arrow_keys: !1\n      },\n      over: !1,\n      inDrag: !1,\n      getValue: function getValue() {\n        return this.options.range ? this.options.value : this.options.value[0];\n      },\n      setValue: function setValue(a, b) {\n        a || (a = 0), this.options.value = this._validateInputValue(a);\n\n        var c = this._applyPrecision.bind(this);\n\n        this.options.range ? (this.options.value[0] = c(this.options.value[0]), this.options.value[1] = c(this.options.value[1]), this.options.value[0] = Math.max(this.options.min, Math.min(this.options.max, this.options.value[0])), this.options.value[1] = Math.max(this.options.min, Math.min(this.options.max, this.options.value[1]))) : (this.options.value = c(this.options.value), this.options.value = [Math.max(this.options.min, Math.min(this.options.max, this.options.value))], this._addClass(this.handle2, \"hide\"), this.options.value[1] = \"after\" === this.options.selection ? this.options.max : this.options.min), this.diff = this.options.max - this.options.min, this.percentage = this.diff > 0 ? [100 * (this.options.value[0] - this.options.min) / this.diff, 100 * (this.options.value[1] - this.options.min) / this.diff, 100 * this.options.step / this.diff] : [0, 0, 100], this._layout();\n        var d = this.options.range ? this.options.value : this.options.value[0];\n        return this._setDataVal(d), b === !0 && this._trigger(\"slide\", d), this;\n      },\n      destroy: function destroy() {\n        this._removeSliderEventHandlers(), this.sliderElem.parentNode.removeChild(this.sliderElem), this.element.style.display = \"\", this._cleanUpEventCallbacksMap(), this.element.removeAttribute(\"data\"), a && (this._unbindJQueryEventHandlers(), this.$element.removeData(\"slider\"));\n      },\n      disable: function disable() {\n        return this.options.enabled = !1, this.handle1.removeAttribute(\"tabindex\"), this.handle2.removeAttribute(\"tabindex\"), this._addClass(this.sliderElem, \"slider-disabled\"), this._trigger(\"slideDisabled\"), this;\n      },\n      enable: function enable() {\n        return this.options.enabled = !0, this.handle1.setAttribute(\"tabindex\", 0), this.handle2.setAttribute(\"tabindex\", 0), this._removeClass(this.sliderElem, \"slider-disabled\"), this._trigger(\"slideEnabled\"), this;\n      },\n      toggle: function toggle() {\n        return this.options.enabled ? this.disable() : this.enable(), this;\n      },\n      isEnabled: function isEnabled() {\n        return this.options.enabled;\n      },\n      on: function on(b, c) {\n        return a ? (this.$element.on(b, c), this.$sliderElem.on(b, c)) : this._bindNonQueryEventHandler(b, c), this;\n      },\n      getAttribute: function getAttribute(a) {\n        return a ? this.options[a] : this.options;\n      },\n      setAttribute: function setAttribute(a, b) {\n        return this.options[a] = b, this;\n      },\n      refresh: function refresh() {\n        return this._removeSliderEventHandlers(), b.call(this, this.element, this.options), a && a.data(this.element, \"slider\", this), this;\n      },\n      _removeSliderEventHandlers: function _removeSliderEventHandlers() {\n        this.handle1.removeEventListener(\"keydown\", this.handle1Keydown, !1), this.handle1.removeEventListener(\"focus\", this.showTooltip, !1), this.handle1.removeEventListener(\"blur\", this.hideTooltip, !1), this.handle2.removeEventListener(\"keydown\", this.handle2Keydown, !1), this.handle2.removeEventListener(\"focus\", this.handle2Keydown, !1), this.handle2.removeEventListener(\"blur\", this.handle2Keydown, !1), this.sliderElem.removeEventListener(\"mouseenter\", this.showTooltip, !1), this.sliderElem.removeEventListener(\"mouseleave\", this.hideTooltip, !1), this.sliderElem.removeEventListener(\"touchstart\", this.mousedown, !1), this.sliderElem.removeEventListener(\"mousedown\", this.mousedown, !1);\n      },\n      _bindNonQueryEventHandler: function _bindNonQueryEventHandler(a, b) {\n        void 0 === this.eventToCallbackMap[a] && (this.eventToCallbackMap[a] = []), this.eventToCallbackMap[a].push(b);\n      },\n      _cleanUpEventCallbacksMap: function _cleanUpEventCallbacksMap() {\n        for (var a = Object.keys(this.eventToCallbackMap), b = 0; b < a.length; b++) {\n          var c = a[b];\n          this.eventToCallbackMap[c] = null;\n        }\n      },\n      _showTooltip: function _showTooltip() {\n        this.options.tooltip_split === !1 ? this._addClass(this.tooltip, \"in\") : (this._addClass(this.tooltip_min, \"in\"), this._addClass(this.tooltip_max, \"in\")), this.over = !0;\n      },\n      _hideTooltip: function _hideTooltip() {\n        this.inDrag === !1 && this.alwaysShowTooltip !== !0 && (this._removeClass(this.tooltip, \"in\"), this._removeClass(this.tooltip_min, \"in\"), this._removeClass(this.tooltip_max, \"in\")), this.over = !1;\n      },\n      _layout: function _layout() {\n        var a;\n        if (a = this.options.reversed ? [100 - this.percentage[0], this.percentage[1]] : [this.percentage[0], this.percentage[1]], this.handle1.style[this.stylePos] = a[0] + \"%\", this.handle2.style[this.stylePos] = a[1] + \"%\", \"vertical\" === this.options.orientation) this.trackSelection.style.top = Math.min(a[0], a[1]) + \"%\", this.trackSelection.style.height = Math.abs(a[0] - a[1]) + \"%\";else {\n          this.trackSelection.style.left = Math.min(a[0], a[1]) + \"%\", this.trackSelection.style.width = Math.abs(a[0] - a[1]) + \"%\";\n          var b = this.tooltip_min.getBoundingClientRect(),\n              c = this.tooltip_max.getBoundingClientRect();\n          b.right > c.left ? (this._removeClass(this.tooltip_max, \"top\"), this._addClass(this.tooltip_max, \"bottom\"), this.tooltip_max.style.top = \"18px\") : (this._removeClass(this.tooltip_max, \"bottom\"), this._addClass(this.tooltip_max, \"top\"), this.tooltip_max.style.top = \"-30px\");\n        }\n        var d;\n\n        if (this.options.range) {\n          d = this.options.formatter(this.options.value), this._setText(this.tooltipInner, d), this.tooltip.style[this.stylePos] = (a[1] + a[0]) / 2 + \"%\", \"vertical\" === this.options.orientation ? this._css(this.tooltip, \"margin-top\", -this.tooltip.offsetHeight / 2 + \"px\") : this._css(this.tooltip, \"margin-left\", -this.tooltip.offsetWidth / 2 + \"px\"), \"vertical\" === this.options.orientation ? this._css(this.tooltip, \"margin-top\", -this.tooltip.offsetHeight / 2 + \"px\") : this._css(this.tooltip, \"margin-left\", -this.tooltip.offsetWidth / 2 + \"px\");\n          var e = this.options.formatter(this.options.value[0]);\n\n          this._setText(this.tooltipInner_min, e);\n\n          var f = this.options.formatter(this.options.value[1]);\n          this._setText(this.tooltipInner_max, f), this.tooltip_min.style[this.stylePos] = a[0] + \"%\", \"vertical\" === this.options.orientation ? this._css(this.tooltip_min, \"margin-top\", -this.tooltip_min.offsetHeight / 2 + \"px\") : this._css(this.tooltip_min, \"margin-left\", -this.tooltip_min.offsetWidth / 2 + \"px\"), this.tooltip_max.style[this.stylePos] = a[1] + \"%\", \"vertical\" === this.options.orientation ? this._css(this.tooltip_max, \"margin-top\", -this.tooltip_max.offsetHeight / 2 + \"px\") : this._css(this.tooltip_max, \"margin-left\", -this.tooltip_max.offsetWidth / 2 + \"px\");\n        } else d = this.options.formatter(this.options.value[0]), this._setText(this.tooltipInner, d), this.tooltip.style[this.stylePos] = a[0] + \"%\", \"vertical\" === this.options.orientation ? this._css(this.tooltip, \"margin-top\", -this.tooltip.offsetHeight / 2 + \"px\") : this._css(this.tooltip, \"margin-left\", -this.tooltip.offsetWidth / 2 + \"px\");\n      },\n      _removeProperty: function _removeProperty(a, b) {\n        a.style.removeProperty ? a.style.removeProperty(b) : a.style.removeAttribute(b);\n      },\n      _mousedown: function _mousedown(a) {\n        if (!this.options.enabled) return !1;\n        this._triggerFocusOnHandle(), this.offset = this._offset(this.sliderElem), this.size = this.sliderElem[this.sizePos];\n\n        var b = this._getPercentage(a);\n\n        if (this.options.range) {\n          var c = Math.abs(this.percentage[0] - b),\n              d = Math.abs(this.percentage[1] - b);\n          this.dragged = d > c ? 0 : 1;\n        } else this.dragged = 0;\n\n        this.percentage[this.dragged] = this.options.reversed ? 100 - b : b, this._layout(), this.mousemove = this._mousemove.bind(this), this.mouseup = this._mouseup.bind(this), this.touchCapable ? (document.addEventListener(\"touchmove\", this.mousemove, !1), document.addEventListener(\"touchend\", this.mouseup, !1)) : (document.addEventListener(\"mousemove\", this.mousemove, !1), document.addEventListener(\"mouseup\", this.mouseup, !1)), this.inDrag = !0;\n\n        var e = this._calculateValue();\n\n        return this._trigger(\"slideStart\", e), this._setDataVal(e), this.setValue(e), this._pauseEvent(a), !0;\n      },\n      _triggerFocusOnHandle: function _triggerFocusOnHandle(a) {\n        0 === a && this.handle1.focus(), 1 === a && this.handle2.focus();\n      },\n      _keydown: function _keydown(a, b) {\n        if (!this.options.enabled) return !1;\n        var c;\n\n        switch (b.keyCode) {\n          case 37:\n          case 40:\n            c = -1;\n            break;\n\n          case 39:\n          case 38:\n            c = 1;\n        }\n\n        if (c) {\n          if (this.options.natural_arrow_keys) {\n            var d = \"vertical\" === this.options.orientation && !this.options.reversed,\n                e = \"horizontal\" === this.options.orientation && this.options.reversed;\n            (d || e) && (c = -1 * c);\n          }\n\n          var f = c * this.percentage[2],\n              g = this.percentage[a] + f;\n          g > 100 ? g = 100 : 0 > g && (g = 0), this.dragged = a, this._adjustPercentageForRangeSliders(g), this.percentage[this.dragged] = g, this._layout();\n\n          var h = this._calculateValue();\n\n          return this._trigger(\"slideStart\", h), this._setDataVal(h), this.setValue(h, !0), this._trigger(\"slideStop\", h), this._setDataVal(h), this._pauseEvent(b), !1;\n        }\n      },\n      _pauseEvent: function _pauseEvent(a) {\n        a.stopPropagation && a.stopPropagation(), a.preventDefault && a.preventDefault(), a.cancelBubble = !0, a.returnValue = !1;\n      },\n      _mousemove: function _mousemove(a) {\n        if (!this.options.enabled) return !1;\n\n        var b = this._getPercentage(a);\n\n        this._adjustPercentageForRangeSliders(b), this.percentage[this.dragged] = this.options.reversed ? 100 - b : b, this._layout();\n\n        var c = this._calculateValue();\n\n        return this.setValue(c, !0), !1;\n      },\n      _adjustPercentageForRangeSliders: function _adjustPercentageForRangeSliders(a) {\n        this.options.range && (0 === this.dragged && this.percentage[1] < a ? (this.percentage[0] = this.percentage[1], this.dragged = 1) : 1 === this.dragged && this.percentage[0] > a && (this.percentage[1] = this.percentage[0], this.dragged = 0));\n      },\n      _mouseup: function _mouseup() {\n        if (!this.options.enabled) return !1;\n        this.touchCapable ? (document.removeEventListener(\"touchmove\", this.mousemove, !1), document.removeEventListener(\"touchend\", this.mouseup, !1)) : (document.removeEventListener(\"mousemove\", this.mousemove, !1), document.removeEventListener(\"mouseup\", this.mouseup, !1)), this.inDrag = !1, this.over === !1 && this._hideTooltip();\n\n        var a = this._calculateValue();\n\n        return this._layout(), this._setDataVal(a), this._trigger(\"slideStop\", a), !1;\n      },\n      _calculateValue: function _calculateValue() {\n        var a;\n        return this.options.range ? (a = [this.options.min, this.options.max], 0 !== this.percentage[0] && (a[0] = Math.max(this.options.min, this.options.min + Math.round(this.diff * this.percentage[0] / 100 / this.options.step) * this.options.step), a[0] = this._applyPrecision(a[0])), 100 !== this.percentage[1] && (a[1] = Math.min(this.options.max, this.options.min + Math.round(this.diff * this.percentage[1] / 100 / this.options.step) * this.options.step), a[1] = this._applyPrecision(a[1])), this.options.value = a) : (a = this.options.min + Math.round(this.diff * this.percentage[0] / 100 / this.options.step) * this.options.step, a < this.options.min ? a = this.options.min : a > this.options.max && (a = this.options.max), a = parseFloat(a), a = this._applyPrecision(a), this.options.value = [a, this.options.value[1]]), a;\n      },\n      _applyPrecision: function _applyPrecision(a) {\n        var b = this.options.precision || this._getNumDigitsAfterDecimalPlace(this.step);\n\n        return this._applyToFixedAndParseFloat(a, b);\n      },\n      _getNumDigitsAfterDecimalPlace: function _getNumDigitsAfterDecimalPlace(a) {\n        var b = (\"\" + a).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n        return b ? Math.max(0, (b[1] ? b[1].length : 0) - (b[2] ? +b[2] : 0)) : 0;\n      },\n      _applyToFixedAndParseFloat: function _applyToFixedAndParseFloat(a, b) {\n        var c = a.toFixed(b);\n        return parseFloat(c);\n      },\n      _getPercentage: function _getPercentage(a) {\n        !this.touchCapable || \"touchstart\" !== a.type && \"touchmove\" !== a.type || (a = a.touches[0]);\n        var b = 100 * (a[this.mousePos] - this.offset[this.stylePos]) / this.size;\n        return b = Math.round(b / this.percentage[2]) * this.percentage[2], Math.max(0, Math.min(100, b));\n      },\n      _validateInputValue: function _validateInputValue(a) {\n        if (\"number\" == typeof a) return a;\n        if (a instanceof Array) return this._validateArray(a), a;\n        throw new Error(c.formatInvalidInputErrorMsg(a));\n      },\n      _validateArray: function _validateArray(a) {\n        for (var b = 0; b < a.length; b++) {\n          var d = a[b];\n          if (\"number\" != typeof d) throw new Error(c.formatInvalidInputErrorMsg(d));\n        }\n      },\n      _setDataVal: function _setDataVal(a) {\n        var b = \"value: '\" + a + \"'\";\n        this.element.setAttribute(\"data\", b), this.element.setAttribute(\"value\", a);\n      },\n      _trigger: function _trigger(b, c) {\n        c = c || void 0;\n        var d = this.eventToCallbackMap[b];\n        if (d && d.length) for (var e = 0; e < d.length; e++) {\n          var f = d[e];\n          f(c);\n        }\n        a && this._triggerJQueryEvent(b, c);\n      },\n      _triggerJQueryEvent: function _triggerJQueryEvent(a, b) {\n        var c = {\n          type: a,\n          value: b\n        };\n        this.$element.trigger(c), this.$sliderElem.trigger(c);\n      },\n      _unbindJQueryEventHandlers: function _unbindJQueryEventHandlers() {\n        this.$element.off(), this.$sliderElem.off();\n      },\n      _setText: function _setText(a, b) {\n        \"undefined\" != typeof a.innerText ? a.innerText = b : \"undefined\" != typeof a.textContent && (a.textContent = b);\n      },\n      _removeClass: function _removeClass(a, b) {\n        for (var c = b.split(\" \"), d = a.className, e = 0; e < c.length; e++) {\n          var f = c[e],\n              g = new RegExp(\"(?:\\\\s|^)\" + f + \"(?:\\\\s|$)\");\n          d = d.replace(g, \" \");\n        }\n\n        a.className = d.trim();\n      },\n      _addClass: function _addClass(a, b) {\n        for (var c = b.split(\" \"), d = a.className, e = 0; e < c.length; e++) {\n          var f = c[e],\n              g = new RegExp(\"(?:\\\\s|^)\" + f + \"(?:\\\\s|$)\"),\n              h = g.test(d);\n          h || (d += \" \" + f);\n        }\n\n        a.className = d.trim();\n      },\n      _offset: function _offset(a) {\n        var b = 0,\n            c = 0;\n        if (a.offsetParent) do {\n          b += a.offsetLeft, c += a.offsetTop;\n        } while (a = a.offsetParent);\n        return {\n          left: b,\n          top: c\n        };\n      },\n      _css: function _css(a, b, c) {\n        a.style[b] = c;\n      }\n    }, a) {\n      var e = a.fn.slider ? \"bootstrapSlider\" : \"slider\";\n      a.bridget(e, d);\n    } else window.Slider = d;\n  }(a);\n}(window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./public/assets/js/bootstrap-slider.min.js\n");
/******/ })()
;